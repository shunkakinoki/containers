name: Nbdev
on: pull_request
jobs:
  nbdev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install pipenv package
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Cache pipenv
        id: cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-
      - name: Install dependencies with pipenv
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pipenv sync --dev
        env:
          PIPENV_VENV_IN_PROJECT: true
      - name: Read all notebooks
        run: |
          pipenv run nbdev_read_nbs
      - name: Check if all notebooks are cleaned
        run: |
          echo "Check we are starting with clean git checkout"
          if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
          echo "Trying to strip out notebooks"
          pipenv run nbdev_clean_nbs
          echo "Check that strip out was unnecessary"
          git status -s # display the status to see which nbs need cleaning up
          if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi
      - name: Check if there is no diff library/notebooks
        run: |
          if [-n "$(pipenv run nbdev_diff_nbs)"]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi
      - name: Run tests
        run: |
          pipenv run nbdev_test_nbs